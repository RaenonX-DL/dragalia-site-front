name: CI & CD

on: [ push ]

env:
  # Need to use real backends for cypress testings
  NEXT_PUBLIC_API_ROOT: https://dl-back.raenonx.cc
  NEXT_PUBLIC_RESOURCE_ROOT: https://raw.githubusercontent.com/RaenonX-DL/dragalia-site-resources/main
  NEXT_PUBLIC_DEPOT_ROOT: https://raw.githubusercontent.com/RaenonX-DL/dragalia-data-depot/main
  NEXTAUTH_URL: http://localhost:3000
  CI: true

jobs:
  test:
    name: Tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          # https://github.com/npm/cli/issues/564#issuecomment-743919613
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: npm ci
        run: npm ci

      - name: npm run lint
        run: npm run lint

      - name: npm run lint
        run: npm run lint:css

      - name: npm test
        run: npm run test -- --coverage

      - name: Send coverage report
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: clover.xml

  build:
    name: Test production build

    runs-on: ubuntu-latest

    env:
      # Corresponds to `baseUrl` in `cypress.json`
      PORT: 3000

    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          # https://github.com/npm/cli/issues/564#issuecomment-743919613
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: npm ci
        run: npm ci

      - name: npm run build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Cypress tests
        run: npm run test:ci
        env:
          NODE_ENV: production

      - name: Upload Cypress failure results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Cypress Results
          path: |
            .cypress/screenshots
            .cypress/videos
          if-no-files-found: error

  deploy:
    name: Deploy

    if: success() && github.ref == 'refs/heads/main'

    needs: [test, build]

    runs-on: ubuntu-latest

    steps:
      - name: Configure SSH
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/remote.key
          chmod 600 ~/.ssh/remote.key
          cat >>~/.ssh/config <<END
          Host remote
            HostName $SSH_HOST
            User $SSH_USERNAME
            IdentityFile ~/.ssh/remote.key
            StrictHostKeyChecking no
          END

      - name: Deploy
        run: |
          ssh remote './deploy.sh ${{ github.repository }}'
